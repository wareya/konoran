name: Rust

on:
  push:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  
jobs:
  build-windows:
    permissions: write-all
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      
    - name: print architecture
      run: printenv PROCESSOR_ARCHITECTURE
    - name: save arch
      run: echo "RUNNERCPUARCH=$(printenv PROCESSOR_ARCHITECTURE)" >> $env:GITHUB_ENV
    - name: test arch
      run: echo "${{ env.RUNNERCPUARCH }}"
      
    - name: Download LLVM
      uses: robinraju/release-downloader@v1.10
      with:
        repository: wareya/llvm-custom-builds
        tag: 18.x
        fileName: llvm-windows-amd64.tar.xz
        out-file-path: llvm-windows
      
    - name: inspect
      run: ls llvm-windows
      
    - name: Extract LLVM
      run: cd llvm-windows && 7z x llvm-windows-amd64.tar.xz && 7z x llvm-windows-amd64.tar
      
    - name: inspect
      run: ls llvm-windows
      
    - name: Build
      run: set "LLVM_SYS_180_PREFIX=${{GITHUB_WORKSPACE}}/llvm-windows" && cargo build --verbose
      
    - name: Nightly Release (Windows)
      uses: andelf/nightly-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "nightly-win32-${{ env.RUNNERCPUARCH }}"
        name: "Windows Nightly ${{ env.RUNNERCPUARCH }}"
        body: "Built release for 64-bit Windows systems. Supports JIT."
        files: |
          target/release/konoran*
  build:
    permissions: write-all
    runs-on: ubuntu-24.04
    steps:
    - uses: actions/checkout@v4
      
    - name: print architecture
      run: uname -p
    - name: save arch
      run: echo "RUNNERCPUARCH=$(uname -p -p)" >> $GITHUB_ENV
    - name: test arch
      run: echo "${{ env.RUNNERCPUARCH }}"
      
    - name: Use the determinate nix installer
      uses: DeterminateSystems/nix-installer-action@main
      with:
        source-revision: 7011c077ec491da410fbc39f68676b0908b9ce7e
      
    - name: set up cachix
      run: nix-env -iA cachix -f https://cachix.org/api/v1/install

    - name: use dependency cache
      run: cachix use konoran-cache

    - name: Build Dynamic
      run: nix build -L

    - name: Generate appimage
      run: nix bundle --bundler https://github.com/hcssmith/nix-appimage/archive/c4353dd70ed491ad0d1e4d8a61a11b0523f9ab09.tar.gz .#konoran
    
    - name: Build Static
      run: nix build .#konoranStatic -L
    
    - name: Rename static build
      run: cp result/bin/konoran konoran-static
    
    - name: Inspect
      run: ls
    
    - name: Nightly Release (Linux)
      uses: andelf/nightly-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "nightly-linux-${{ env.RUNNERCPUARCH }}"
        name: "Linux Nightly ${{ env.RUNNERCPUARCH }}"
        body: "Built release for 64-bit Linux systems. AppImage supports JIT mode. Raw executable is statically linked and does not support JIT mode, but does support everything else."
        files: |
          ./konoran-unstable-x86_64.AppImage
          ./konoran-static
    
