name: Rust

on:
  push:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  
jobs:
  build:
    permissions: write-all
    runs-on: ubuntu-latest
    env:
      nix_prefix: nix shell -i -I nixpkgs=https://github.com/NixOS/nixpkgs/archive/33d1e753c82ffc557b4a585c77de43d4c922ebb5.tar.gz nixpkgs#coreutils nixpkgs#gcc nixpkgs#musl.dev nixpkgs#rustup nixpkgs#llvmPackages_18.libllvm.dev nixpkgs\#llvmPackages_18.clang -c
    steps:
    - uses: actions/checkout@v4
      
    - name: print architecture
      run: uname -p
    - name: save arch
      run: echo "RUNNERCPUARCH=$(uname -p -p)" >> $GITHUB_ENV
    - name: test arch
      run: echo "${{ env.RUNNERCPUARCH }}"
      
    - name: download zlib source code
      uses: robinraju/release-downloader@v1.10
      with:
        repository: madler/zlib
        tag: v1.3.1
        fileName: zlib-1.3.1.tar.gz 
        out-file-path: .
        extract: true
      
    - name: inspect zlib
      run: cd zlib-1.3.1 && ls . && echo "----"

    - name: Use the determinate nix installer
      uses: DeterminateSystems/nix-installer-action@main
      with:
        source-revision: 7011c077ec491da410fbc39f68676b0908b9ce7e
      
    - name: test musl-gcc
      run: ${{env.nix_prefix}} musl-gcc -v
    
    - name: compile zlib
      run: ${{env.nix_prefix}} ls . && echo "----" && cd zlib-1.3.1 && cmake --help && cmake -B .build -S . -DCMAKE_C_COMPILER=musl-gcc -DCMAKE_BUILD_TYPE=Release && cmake --build .build

    - name: inspect
      run: cd "${GITHUB_WORKSPACE}" && ls zlib-1.3.1 && echo "---" && ls zlib-1.3.1/.build
      
    - name: Install musl toolchain
      run: ${{env.nix_prefix}} rustup target add x86_64-unknown-linux-musl

    - name: Become horror
      run: mkdir target
           mkdir target/release &&
           mkdir target/release/deps &&
           echo "$(nix build nixpkgs#musl.out --print-out-paths --no-link)" &&
           echo "----" &&
           ls "$(nix build nixpkgs#musl.out --print-out-paths --no-link)" &&
           echo "----" &&
           ls "$(nix build nixpkgs#musl.out --print-out-paths --no-link)/lib" &&
           cp "$(nix build nixpkgs#musl.out --print-out-paths --no-link)/lib/librt.a" target/release/deps &&
           echo "----" &&
           ls target/release/deps
      
    - name: Build
      run: ${{env.nix_prefix}} cargo --config "build.rustflags=['-L', '$(nix build nixpkgs#musl.out --print-out-paths --no-link)/lib']" build --target x86_64-unknown-linux-musl --release --verbose
      
    - name: Inspect
      run: ls target/x86_64-unknown-linux-gnu/release
      
    - name: Nightly Release (Linux)
      uses: andelf/nightly-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "nightly-linux-${{ env.RUNNERCPUARCH }}"
        name: "Linux Nightly ${{ env.RUNNERCPUARCH }}"
        files: "target/x86_64-unknown-linux-gnu/release/konoran*"
    
