// core types: u8, i8, u16, i16, u32, i32, u64, i64, f32, f64
// pointer types: ptr(type), funcptr(returntype, (arg1type, arg2type, ...))
// composite types: structs, array(type, len)

// must be linked together with irexample_other.txt

struct Vec2
{
    f32 x;
    f32 y;
}

using i32 testvar;

using Vec2 myvec;

void func_etc()
{
    print_float((myvec.x) as f64);
    print_float((*@&myvec.x) as f64);
    u8 x;
    if (&x)
        goto asdf;
asdf:
    print_float(1.0f64/0.0f64);
    print_float(1.0f64/-0.0f64);
    print_float(1.0f64%0.0f64);
    print_float(1.0f64%-0.0f64);
    
    //print_float(((&testvar) bit_as u64) as f64);
    print_float((testvar) as f64);
    return;
}

export_extern void main()
{
    func_etc();
    return;
}